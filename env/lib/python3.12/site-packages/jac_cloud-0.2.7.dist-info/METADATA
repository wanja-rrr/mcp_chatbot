Metadata-Version: 2.4
Name: jac-cloud
Version: 0.2.7
Summary: 
License-File: LICENSE
Author: Jason Mars
Author-email: jason@jaseci.org
Requires-Python: >=3.12.0,<4.0.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Requires-Dist: apscheduler (==3.11.0)
Requires-Dist: asyncer (==0.0.8)
Requires-Dist: broadcaster[redis] (==0.3.1)
Requires-Dist: ecs-logging (==2.2.0)
Requires-Dist: email-validator (==2.2.0)
Requires-Dist: fakeredis (==2.27.0)
Requires-Dist: fastapi (==0.115.11)
Requires-Dist: fastapi-sso (==0.17.0)
Requires-Dist: google-auth (==2.38.0)
Requires-Dist: gunicorn (==23.0.0)
Requires-Dist: httpx (==0.28.1)
Requires-Dist: jaclang (==0.8.7)
Requires-Dist: montydb (==2.5.3)
Requires-Dist: motor (==3.7.0)
Requires-Dist: orjson (==3.10.15)
Requires-Dist: passlib (==1.7.4)
Requires-Dist: pydantic (==2.10.6)
Requires-Dist: pydantic-settings (==2.8.1)
Requires-Dist: pyjwt[crypto] (==2.10.1)
Requires-Dist: pymongo (==4.11.3)
Requires-Dist: python-multipart (==0.0.20)
Requires-Dist: redis (==5.0.3)
Requires-Dist: sendgrid (==6.11.0)
Requires-Dist: uvicorn[standard] (==0.34.0)
Description-Content-Type: text/markdown

# jac-cloud
`jac-cloud` is the cloud-native library for jac programs. `jac-cloud` automatically converts your jac program from a script-like local program to a production-readh server stack.

### Install
#### From pip
```bash
pip install jac-cloud
```
### From source (for contributors)
```bash
git clone https://github.com/Jaseci-Labs/jaseci.git
cd jaseci/jac-cloud
pip install -e .
```
#### Additional dependencies for contributors
```bash
pip install jaclang black pre-commit pytest flake8 flake8_import_order flake8_docstrings flake8_comprehensions flake8_bugbear flake8_annotations pep8_naming flake8_simplify mypy pytest
pre-commit install
```

### Quick Start
Simply replace `jac run` with `jac serve`. `jac serve` starts an API server with a set of API endpoints corresponding to the walkers in the jac program.

`jac serve main.jac`

### API Docs
Once starts, navigate to `/docs` to access the built-in API docs.

For additional details, check out [our documentation](https://www.jac-lang.org/learn/guide/).

test
